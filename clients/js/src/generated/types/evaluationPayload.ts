/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Address,
  getAddressDecoder,
  getAddressEncoder,
} from '@solana/addresses';
import {
  Codec,
  Decoder,
  Encoder,
  GetDataEnumKind,
  GetDataEnumKindContent,
  Option,
  OptionOrNullable,
  combineCodec,
  getBooleanDecoder,
  getBooleanEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getDataEnumDecoder,
  getDataEnumEncoder,
  getI128Decoder,
  getI128Encoder,
  getI16Decoder,
  getI16Encoder,
  getI32Decoder,
  getI32Encoder,
  getI64Decoder,
  getI64Encoder,
  getI8Decoder,
  getI8Encoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getTupleDecoder,
  getTupleEncoder,
  getU128Decoder,
  getU128Encoder,
  getU16Decoder,
  getU16Encoder,
  getU32Decoder,
  getU32Encoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder,
} from '@solana/codecs';

export type EvaluationPayload =
  | { __kind: 'U8'; fields: [Option<number>, Option<number>, number, boolean] }
  | { __kind: 'U16'; fields: [Option<number>, Option<number>, number, boolean] }
  | { __kind: 'U32'; fields: [Option<number>, Option<number>, number, boolean] }
  | { __kind: 'U64'; fields: [Option<bigint>, Option<bigint>, number, boolean] }
  | {
      __kind: 'U128';
      fields: [Option<bigint>, Option<bigint>, number, boolean];
    }
  | { __kind: 'I8'; fields: [Option<number>, Option<number>, number, boolean] }
  | { __kind: 'I16'; fields: [Option<number>, Option<number>, number, boolean] }
  | { __kind: 'I32'; fields: [Option<number>, Option<number>, number, boolean] }
  | { __kind: 'I64'; fields: [Option<bigint>, Option<bigint>, number, boolean] }
  | {
      __kind: 'I128';
      fields: [Option<bigint>, Option<bigint>, number, boolean];
    }
  | {
      __kind: 'Pubkey';
      fields: [Option<Address>, Option<Address>, number, boolean];
    }
  | { __kind: 'Bytes'; fields: [Uint8Array, Uint8Array, number, boolean] }
  | {
      __kind: 'Bool';
      fields: [Option<boolean>, Option<boolean>, number, boolean];
    };

export type EvaluationPayloadArgs =
  | {
      __kind: 'U8';
      fields: [
        OptionOrNullable<number>,
        OptionOrNullable<number>,
        number,
        boolean
      ];
    }
  | {
      __kind: 'U16';
      fields: [
        OptionOrNullable<number>,
        OptionOrNullable<number>,
        number,
        boolean
      ];
    }
  | {
      __kind: 'U32';
      fields: [
        OptionOrNullable<number>,
        OptionOrNullable<number>,
        number,
        boolean
      ];
    }
  | {
      __kind: 'U64';
      fields: [
        OptionOrNullable<number | bigint>,
        OptionOrNullable<number | bigint>,
        number,
        boolean
      ];
    }
  | {
      __kind: 'U128';
      fields: [
        OptionOrNullable<number | bigint>,
        OptionOrNullable<number | bigint>,
        number,
        boolean
      ];
    }
  | {
      __kind: 'I8';
      fields: [
        OptionOrNullable<number>,
        OptionOrNullable<number>,
        number,
        boolean
      ];
    }
  | {
      __kind: 'I16';
      fields: [
        OptionOrNullable<number>,
        OptionOrNullable<number>,
        number,
        boolean
      ];
    }
  | {
      __kind: 'I32';
      fields: [
        OptionOrNullable<number>,
        OptionOrNullable<number>,
        number,
        boolean
      ];
    }
  | {
      __kind: 'I64';
      fields: [
        OptionOrNullable<number | bigint>,
        OptionOrNullable<number | bigint>,
        number,
        boolean
      ];
    }
  | {
      __kind: 'I128';
      fields: [
        OptionOrNullable<number | bigint>,
        OptionOrNullable<number | bigint>,
        number,
        boolean
      ];
    }
  | {
      __kind: 'Pubkey';
      fields: [
        OptionOrNullable<Address>,
        OptionOrNullable<Address>,
        number,
        boolean
      ];
    }
  | { __kind: 'Bytes'; fields: [Uint8Array, Uint8Array, number, boolean] }
  | {
      __kind: 'Bool';
      fields: [
        OptionOrNullable<boolean>,
        OptionOrNullable<boolean>,
        number,
        boolean
      ];
    };

export function getEvaluationPayloadEncoder(): Encoder<EvaluationPayloadArgs> {
  return getDataEnumEncoder([
    [
      'U8',
      getStructEncoder([
        [
          'fields',
          getTupleEncoder([
            getOptionEncoder(getU8Encoder()),
            getOptionEncoder(getU8Encoder()),
            getU8Encoder(),
            getBooleanEncoder(),
          ]),
        ],
      ]),
    ],
    [
      'U16',
      getStructEncoder([
        [
          'fields',
          getTupleEncoder([
            getOptionEncoder(getU16Encoder()),
            getOptionEncoder(getU16Encoder()),
            getU8Encoder(),
            getBooleanEncoder(),
          ]),
        ],
      ]),
    ],
    [
      'U32',
      getStructEncoder([
        [
          'fields',
          getTupleEncoder([
            getOptionEncoder(getU32Encoder()),
            getOptionEncoder(getU32Encoder()),
            getU8Encoder(),
            getBooleanEncoder(),
          ]),
        ],
      ]),
    ],
    [
      'U64',
      getStructEncoder([
        [
          'fields',
          getTupleEncoder([
            getOptionEncoder(getU64Encoder()),
            getOptionEncoder(getU64Encoder()),
            getU8Encoder(),
            getBooleanEncoder(),
          ]),
        ],
      ]),
    ],
    [
      'U128',
      getStructEncoder([
        [
          'fields',
          getTupleEncoder([
            getOptionEncoder(getU128Encoder()),
            getOptionEncoder(getU128Encoder()),
            getU8Encoder(),
            getBooleanEncoder(),
          ]),
        ],
      ]),
    ],
    [
      'I8',
      getStructEncoder([
        [
          'fields',
          getTupleEncoder([
            getOptionEncoder(getI8Encoder()),
            getOptionEncoder(getI8Encoder()),
            getU8Encoder(),
            getBooleanEncoder(),
          ]),
        ],
      ]),
    ],
    [
      'I16',
      getStructEncoder([
        [
          'fields',
          getTupleEncoder([
            getOptionEncoder(getI16Encoder()),
            getOptionEncoder(getI16Encoder()),
            getU8Encoder(),
            getBooleanEncoder(),
          ]),
        ],
      ]),
    ],
    [
      'I32',
      getStructEncoder([
        [
          'fields',
          getTupleEncoder([
            getOptionEncoder(getI32Encoder()),
            getOptionEncoder(getI32Encoder()),
            getU8Encoder(),
            getBooleanEncoder(),
          ]),
        ],
      ]),
    ],
    [
      'I64',
      getStructEncoder([
        [
          'fields',
          getTupleEncoder([
            getOptionEncoder(getI64Encoder()),
            getOptionEncoder(getI64Encoder()),
            getU8Encoder(),
            getBooleanEncoder(),
          ]),
        ],
      ]),
    ],
    [
      'I128',
      getStructEncoder([
        [
          'fields',
          getTupleEncoder([
            getOptionEncoder(getI128Encoder()),
            getOptionEncoder(getI128Encoder()),
            getU8Encoder(),
            getBooleanEncoder(),
          ]),
        ],
      ]),
    ],
    [
      'Pubkey',
      getStructEncoder([
        [
          'fields',
          getTupleEncoder([
            getOptionEncoder(getAddressEncoder()),
            getOptionEncoder(getAddressEncoder()),
            getU8Encoder(),
            getBooleanEncoder(),
          ]),
        ],
      ]),
    ],
    [
      'Bytes',
      getStructEncoder([
        [
          'fields',
          getTupleEncoder([
            getBytesEncoder({ size: getU32Encoder() }),
            getBytesEncoder({ size: getU32Encoder() }),
            getU8Encoder(),
            getBooleanEncoder(),
          ]),
        ],
      ]),
    ],
    [
      'Bool',
      getStructEncoder([
        [
          'fields',
          getTupleEncoder([
            getOptionEncoder(getBooleanEncoder()),
            getOptionEncoder(getBooleanEncoder()),
            getU8Encoder(),
            getBooleanEncoder(),
          ]),
        ],
      ]),
    ],
  ]);
}

export function getEvaluationPayloadDecoder(): Decoder<EvaluationPayload> {
  return getDataEnumDecoder([
    [
      'U8',
      getStructDecoder([
        [
          'fields',
          getTupleDecoder([
            getOptionDecoder(getU8Decoder()),
            getOptionDecoder(getU8Decoder()),
            getU8Decoder(),
            getBooleanDecoder(),
          ]),
        ],
      ]),
    ],
    [
      'U16',
      getStructDecoder([
        [
          'fields',
          getTupleDecoder([
            getOptionDecoder(getU16Decoder()),
            getOptionDecoder(getU16Decoder()),
            getU8Decoder(),
            getBooleanDecoder(),
          ]),
        ],
      ]),
    ],
    [
      'U32',
      getStructDecoder([
        [
          'fields',
          getTupleDecoder([
            getOptionDecoder(getU32Decoder()),
            getOptionDecoder(getU32Decoder()),
            getU8Decoder(),
            getBooleanDecoder(),
          ]),
        ],
      ]),
    ],
    [
      'U64',
      getStructDecoder([
        [
          'fields',
          getTupleDecoder([
            getOptionDecoder(getU64Decoder()),
            getOptionDecoder(getU64Decoder()),
            getU8Decoder(),
            getBooleanDecoder(),
          ]),
        ],
      ]),
    ],
    [
      'U128',
      getStructDecoder([
        [
          'fields',
          getTupleDecoder([
            getOptionDecoder(getU128Decoder()),
            getOptionDecoder(getU128Decoder()),
            getU8Decoder(),
            getBooleanDecoder(),
          ]),
        ],
      ]),
    ],
    [
      'I8',
      getStructDecoder([
        [
          'fields',
          getTupleDecoder([
            getOptionDecoder(getI8Decoder()),
            getOptionDecoder(getI8Decoder()),
            getU8Decoder(),
            getBooleanDecoder(),
          ]),
        ],
      ]),
    ],
    [
      'I16',
      getStructDecoder([
        [
          'fields',
          getTupleDecoder([
            getOptionDecoder(getI16Decoder()),
            getOptionDecoder(getI16Decoder()),
            getU8Decoder(),
            getBooleanDecoder(),
          ]),
        ],
      ]),
    ],
    [
      'I32',
      getStructDecoder([
        [
          'fields',
          getTupleDecoder([
            getOptionDecoder(getI32Decoder()),
            getOptionDecoder(getI32Decoder()),
            getU8Decoder(),
            getBooleanDecoder(),
          ]),
        ],
      ]),
    ],
    [
      'I64',
      getStructDecoder([
        [
          'fields',
          getTupleDecoder([
            getOptionDecoder(getI64Decoder()),
            getOptionDecoder(getI64Decoder()),
            getU8Decoder(),
            getBooleanDecoder(),
          ]),
        ],
      ]),
    ],
    [
      'I128',
      getStructDecoder([
        [
          'fields',
          getTupleDecoder([
            getOptionDecoder(getI128Decoder()),
            getOptionDecoder(getI128Decoder()),
            getU8Decoder(),
            getBooleanDecoder(),
          ]),
        ],
      ]),
    ],
    [
      'Pubkey',
      getStructDecoder([
        [
          'fields',
          getTupleDecoder([
            getOptionDecoder(getAddressDecoder()),
            getOptionDecoder(getAddressDecoder()),
            getU8Decoder(),
            getBooleanDecoder(),
          ]),
        ],
      ]),
    ],
    [
      'Bytes',
      getStructDecoder([
        [
          'fields',
          getTupleDecoder([
            getBytesDecoder({ size: getU32Decoder() }),
            getBytesDecoder({ size: getU32Decoder() }),
            getU8Decoder(),
            getBooleanDecoder(),
          ]),
        ],
      ]),
    ],
    [
      'Bool',
      getStructDecoder([
        [
          'fields',
          getTupleDecoder([
            getOptionDecoder(getBooleanDecoder()),
            getOptionDecoder(getBooleanDecoder()),
            getU8Decoder(),
            getBooleanDecoder(),
          ]),
        ],
      ]),
    ],
  ]);
}

export function getEvaluationPayloadCodec(): Codec<
  EvaluationPayloadArgs,
  EvaluationPayload
> {
  return combineCodec(
    getEvaluationPayloadEncoder(),
    getEvaluationPayloadDecoder()
  );
}

// Data Enum Helpers.
export function evaluationPayload(
  kind: 'U8',
  data: GetDataEnumKindContent<EvaluationPayloadArgs, 'U8'>['fields']
): GetDataEnumKind<EvaluationPayloadArgs, 'U8'>;
export function evaluationPayload(
  kind: 'U16',
  data: GetDataEnumKindContent<EvaluationPayloadArgs, 'U16'>['fields']
): GetDataEnumKind<EvaluationPayloadArgs, 'U16'>;
export function evaluationPayload(
  kind: 'U32',
  data: GetDataEnumKindContent<EvaluationPayloadArgs, 'U32'>['fields']
): GetDataEnumKind<EvaluationPayloadArgs, 'U32'>;
export function evaluationPayload(
  kind: 'U64',
  data: GetDataEnumKindContent<EvaluationPayloadArgs, 'U64'>['fields']
): GetDataEnumKind<EvaluationPayloadArgs, 'U64'>;
export function evaluationPayload(
  kind: 'U128',
  data: GetDataEnumKindContent<EvaluationPayloadArgs, 'U128'>['fields']
): GetDataEnumKind<EvaluationPayloadArgs, 'U128'>;
export function evaluationPayload(
  kind: 'I8',
  data: GetDataEnumKindContent<EvaluationPayloadArgs, 'I8'>['fields']
): GetDataEnumKind<EvaluationPayloadArgs, 'I8'>;
export function evaluationPayload(
  kind: 'I16',
  data: GetDataEnumKindContent<EvaluationPayloadArgs, 'I16'>['fields']
): GetDataEnumKind<EvaluationPayloadArgs, 'I16'>;
export function evaluationPayload(
  kind: 'I32',
  data: GetDataEnumKindContent<EvaluationPayloadArgs, 'I32'>['fields']
): GetDataEnumKind<EvaluationPayloadArgs, 'I32'>;
export function evaluationPayload(
  kind: 'I64',
  data: GetDataEnumKindContent<EvaluationPayloadArgs, 'I64'>['fields']
): GetDataEnumKind<EvaluationPayloadArgs, 'I64'>;
export function evaluationPayload(
  kind: 'I128',
  data: GetDataEnumKindContent<EvaluationPayloadArgs, 'I128'>['fields']
): GetDataEnumKind<EvaluationPayloadArgs, 'I128'>;
export function evaluationPayload(
  kind: 'Pubkey',
  data: GetDataEnumKindContent<EvaluationPayloadArgs, 'Pubkey'>['fields']
): GetDataEnumKind<EvaluationPayloadArgs, 'Pubkey'>;
export function evaluationPayload(
  kind: 'Bytes',
  data: GetDataEnumKindContent<EvaluationPayloadArgs, 'Bytes'>['fields']
): GetDataEnumKind<EvaluationPayloadArgs, 'Bytes'>;
export function evaluationPayload(
  kind: 'Bool',
  data: GetDataEnumKindContent<EvaluationPayloadArgs, 'Bool'>['fields']
): GetDataEnumKind<EvaluationPayloadArgs, 'Bool'>;
export function evaluationPayload<K extends EvaluationPayloadArgs['__kind']>(
  kind: K,
  data?: any
): Extract<EvaluationPayloadArgs, { __kind: K }> {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isEvaluationPayload<K extends EvaluationPayload['__kind']>(
  kind: K,
  value: EvaluationPayload
): value is EvaluationPayload & { __kind: K } {
  return value.__kind === kind;
}
